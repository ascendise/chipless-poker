[{"name":"Flop","description":"ch.ascendise.pokertracker.BettingRounds.Flop","location":"shared/pokertracker/ch.ascendise.pokertracker/-betting-rounds/-flop/index.html","searchKeys":["Flop","Flop","ch.ascendise.pokertracker.BettingRounds.Flop"]},{"name":"Hole","description":"ch.ascendise.pokertracker.BettingRounds.Hole","location":"shared/pokertracker/ch.ascendise.pokertracker/-betting-rounds/-hole/index.html","searchKeys":["Hole","Hole","ch.ascendise.pokertracker.BettingRounds.Hole"]},{"name":"Reward","description":"ch.ascendise.pokertracker.BettingRounds.Reward","location":"shared/pokertracker/ch.ascendise.pokertracker/-betting-rounds/-reward/index.html","searchKeys":["Reward","Reward","ch.ascendise.pokertracker.BettingRounds.Reward"]},{"name":"River","description":"ch.ascendise.pokertracker.BettingRounds.River","location":"shared/pokertracker/ch.ascendise.pokertracker/-betting-rounds/-river/index.html","searchKeys":["River","River","ch.ascendise.pokertracker.BettingRounds.River"]},{"name":"Turn","description":"ch.ascendise.pokertracker.BettingRounds.Turn","location":"shared/pokertracker/ch.ascendise.pokertracker/-betting-rounds/-turn/index.html","searchKeys":["Turn","Turn","ch.ascendise.pokertracker.BettingRounds.Turn"]},{"name":"abstract class Chips(amount: Int, val owner: Player?) : AutoCloseable","description":"ch.ascendise.pokertracker.chips.ChipsBalance.Chips","location":"shared/pokertracker/ch.ascendise.pokertracker.chips/-chips-balance/-chips/index.html","searchKeys":["Chips","abstract class Chips(amount: Int, val owner: Player?) : AutoCloseable","ch.ascendise.pokertracker.chips.ChipsBalance.Chips"]},{"name":"abstract class ChipsBalance(startingAmount: Int, owner: Player?)","description":"ch.ascendise.pokertracker.chips.ChipsBalance","location":"shared/pokertracker/ch.ascendise.pokertracker.chips/-chips-balance/index.html","searchKeys":["ChipsBalance","abstract class ChipsBalance(startingAmount: Int, owner: Player?)","ch.ascendise.pokertracker.chips.ChipsBalance"]},{"name":"abstract class InvalidPlayException(message: String) : Exception","description":"ch.ascendise.pokertracker.InvalidPlayException","location":"shared/pokertracker/ch.ascendise.pokertracker/-invalid-play-exception/index.html","searchKeys":["InvalidPlayException","abstract class InvalidPlayException(message: String) : Exception","ch.ascendise.pokertracker.InvalidPlayException"]},{"name":"abstract fun deposit(amount: ChipsBalance.Chips)","description":"ch.ascendise.pokertracker.chips.ChipsBalance.deposit","location":"shared/pokertracker/ch.ascendise.pokertracker.chips/-chips-balance/deposit.html","searchKeys":["deposit","abstract fun deposit(amount: ChipsBalance.Chips)","ch.ascendise.pokertracker.chips.ChipsBalance.deposit"]},{"name":"abstract fun withdraw(amount: Int): ChipsBalance.Chips","description":"ch.ascendise.pokertracker.chips.ChipsBalance.withdraw","location":"shared/pokertracker/ch.ascendise.pokertracker.chips/-chips-balance/withdraw.html","searchKeys":["withdraw","abstract fun withdraw(amount: Int): ChipsBalance.Chips","ch.ascendise.pokertracker.chips.ChipsBalance.withdraw"]},{"name":"abstract val name: String","description":"ch.ascendise.pokertracker.Platform.name","location":"shared/pokertracker/ch.ascendise.pokertracker/-platform/name.html","searchKeys":["name","abstract val name: String","ch.ascendise.pokertracker.Platform.name"]},{"name":"class BalanceOverdrawnException(val currentAmount: Int, val attemptedBet: Int) : InvalidPlayException","description":"ch.ascendise.pokertracker.chips.BalanceOverdrawnException","location":"shared/pokertracker/ch.ascendise.pokertracker.chips/-balance-overdrawn-exception/index.html","searchKeys":["BalanceOverdrawnException","class BalanceOverdrawnException(val currentAmount: Int, val attemptedBet: Int) : InvalidPlayException","ch.ascendise.pokertracker.chips.BalanceOverdrawnException"]},{"name":"class ChipsBalanceImpl(startingAmount: Int, owner: Player?) : ChipsBalance","description":"ch.ascendise.pokertracker.chips.ChipsBalanceImpl","location":"shared/pokertracker/ch.ascendise.pokertracker.chips/-chips-balance-impl/index.html","searchKeys":["ChipsBalanceImpl","class ChipsBalanceImpl(startingAmount: Int, owner: Player?) : ChipsBalance","ch.ascendise.pokertracker.chips.ChipsBalanceImpl"]},{"name":"class ChipsDestroyedException(chips: ChipsBalance.Chips) : Exception","description":"ch.ascendise.pokertracker.chips.ChipsDestroyedException","location":"shared/pokertracker/ch.ascendise.pokertracker.chips/-chips-destroyed-exception/index.html","searchKeys":["ChipsDestroyedException","class ChipsDestroyedException(chips: ChipsBalance.Chips) : Exception","ch.ascendise.pokertracker.chips.ChipsDestroyedException"]},{"name":"class GameNotInitializedException : InvalidPlayException","description":"ch.ascendise.pokertracker.engine.GameNotInitializedException","location":"shared/pokertracker/ch.ascendise.pokertracker.engine/-game-not-initialized-exception/index.html","searchKeys":["GameNotInitializedException","class GameNotInitializedException : InvalidPlayException","ch.ascendise.pokertracker.engine.GameNotInitializedException"]},{"name":"class IOSPlatform","description":"ch.ascendise.pokertracker.IOSPlatform","location":"shared/pokertracker/ch.ascendise.pokertracker/-i-o-s-platform/index.html","searchKeys":["IOSPlatform","class IOSPlatform","ch.ascendise.pokertracker.IOSPlatform"]},{"name":"class InvalidStateException(message: String) : InvalidPlayException","description":"ch.ascendise.pokertracker.engine.InvalidStateException","location":"shared/pokertracker/ch.ascendise.pokertracker.engine/-invalid-state-exception/index.html","searchKeys":["InvalidStateException","class InvalidStateException(message: String) : InvalidPlayException","ch.ascendise.pokertracker.engine.InvalidStateException"]},{"name":"class Player(startingChips: Int, val name: String = \"Player #\")","description":"ch.ascendise.pokertracker.Player","location":"shared/pokertracker/ch.ascendise.pokertracker/-player/index.html","searchKeys":["Player","class Player(startingChips: Int, val name: String = \"Player #\")","ch.ascendise.pokertracker.Player"]},{"name":"class Table(players: MutableList<Player>, startingDealer: Player, blinds: Blinds)","description":"ch.ascendise.pokertracker.Table","location":"shared/pokertracker/ch.ascendise.pokertracker/-table/index.html","searchKeys":["Table","class Table(players: MutableList<Player>, startingDealer: Player, blinds: Blinds)","ch.ascendise.pokertracker.Table"]},{"name":"class WrongPlayerException : Exception","description":"ch.ascendise.pokertracker.engine.WrongPlayerException","location":"shared/pokertracker/ch.ascendise.pokertracker.engine/-wrong-player-exception/index.html","searchKeys":["WrongPlayerException","class WrongPlayerException : Exception","ch.ascendise.pokertracker.engine.WrongPlayerException"]},{"name":"constructor()","description":"ch.ascendise.pokertracker.IOSPlatform.IOSPlatform","location":"shared/pokertracker/ch.ascendise.pokertracker/-i-o-s-platform/-i-o-s-platform.html","searchKeys":["IOSPlatform","constructor()","ch.ascendise.pokertracker.IOSPlatform.IOSPlatform"]},{"name":"constructor()","description":"ch.ascendise.pokertracker.engine.GameNotInitializedException.GameNotInitializedException","location":"shared/pokertracker/ch.ascendise.pokertracker.engine/-game-not-initialized-exception/-game-not-initialized-exception.html","searchKeys":["GameNotInitializedException","constructor()","ch.ascendise.pokertracker.engine.GameNotInitializedException.GameNotInitializedException"]},{"name":"constructor()","description":"ch.ascendise.pokertracker.engine.WrongPlayerException.WrongPlayerException","location":"shared/pokertracker/ch.ascendise.pokertracker.engine/-wrong-player-exception/-wrong-player-exception.html","searchKeys":["WrongPlayerException","constructor()","ch.ascendise.pokertracker.engine.WrongPlayerException.WrongPlayerException"]},{"name":"constructor(activePlayer: Player, dealer: Player, smallBlind: Player, bigBlind: Player, round: BettingRounds, blinds: Blinds, pot: Int)","description":"ch.ascendise.pokertracker.GameInfo.GameInfo","location":"shared/pokertracker/ch.ascendise.pokertracker/-game-info/-game-info.html","searchKeys":["GameInfo","constructor(activePlayer: Player, dealer: Player, smallBlind: Player, bigBlind: Player, round: BettingRounds, blinds: Blinds, pot: Int)","ch.ascendise.pokertracker.GameInfo.GameInfo"]},{"name":"constructor(amount: Int, owner: Player?)","description":"ch.ascendise.pokertracker.chips.ChipsBalance.Chips.Chips","location":"shared/pokertracker/ch.ascendise.pokertracker.chips/-chips-balance/-chips/-chips.html","searchKeys":["Chips","constructor(amount: Int, owner: Player?)","ch.ascendise.pokertracker.chips.ChipsBalance.Chips.Chips"]},{"name":"constructor(chips: ChipsBalance.Chips)","description":"ch.ascendise.pokertracker.chips.ChipsDestroyedException.ChipsDestroyedException","location":"shared/pokertracker/ch.ascendise.pokertracker.chips/-chips-destroyed-exception/-chips-destroyed-exception.html","searchKeys":["ChipsDestroyedException","constructor(chips: ChipsBalance.Chips)","ch.ascendise.pokertracker.chips.ChipsDestroyedException.ChipsDestroyedException"]},{"name":"constructor(currentAmount: Int, attemptedBet: Int)","description":"ch.ascendise.pokertracker.chips.BalanceOverdrawnException.BalanceOverdrawnException","location":"shared/pokertracker/ch.ascendise.pokertracker.chips/-balance-overdrawn-exception/-balance-overdrawn-exception.html","searchKeys":["BalanceOverdrawnException","constructor(currentAmount: Int, attemptedBet: Int)","ch.ascendise.pokertracker.chips.BalanceOverdrawnException.BalanceOverdrawnException"]},{"name":"constructor(message: String)","description":"ch.ascendise.pokertracker.InvalidPlayException.InvalidPlayException","location":"shared/pokertracker/ch.ascendise.pokertracker/-invalid-play-exception/-invalid-play-exception.html","searchKeys":["InvalidPlayException","constructor(message: String)","ch.ascendise.pokertracker.InvalidPlayException.InvalidPlayException"]},{"name":"constructor(message: String)","description":"ch.ascendise.pokertracker.engine.InvalidStateException.InvalidStateException","location":"shared/pokertracker/ch.ascendise.pokertracker.engine/-invalid-state-exception/-invalid-state-exception.html","searchKeys":["InvalidStateException","constructor(message: String)","ch.ascendise.pokertracker.engine.InvalidStateException.InvalidStateException"]},{"name":"constructor(players: MutableList<Player>, startingDealer: Player, blinds: Blinds)","description":"ch.ascendise.pokertracker.Table.Table","location":"shared/pokertracker/ch.ascendise.pokertracker/-table/-table.html","searchKeys":["Table","constructor(players: MutableList<Player>, startingDealer: Player, blinds: Blinds)","ch.ascendise.pokertracker.Table.Table"]},{"name":"constructor(small: Int, big: Int)","description":"ch.ascendise.pokertracker.Blinds.Blinds","location":"shared/pokertracker/ch.ascendise.pokertracker/-blinds/-blinds.html","searchKeys":["Blinds","constructor(small: Int, big: Int)","ch.ascendise.pokertracker.Blinds.Blinds"]},{"name":"constructor(startingAmount: Int, owner: Player?)","description":"ch.ascendise.pokertracker.chips.ChipsBalance.ChipsBalance","location":"shared/pokertracker/ch.ascendise.pokertracker.chips/-chips-balance/-chips-balance.html","searchKeys":["ChipsBalance","constructor(startingAmount: Int, owner: Player?)","ch.ascendise.pokertracker.chips.ChipsBalance.ChipsBalance"]},{"name":"constructor(startingAmount: Int, owner: Player?)","description":"ch.ascendise.pokertracker.chips.ChipsBalanceImpl.ChipsBalanceImpl","location":"shared/pokertracker/ch.ascendise.pokertracker.chips/-chips-balance-impl/-chips-balance-impl.html","searchKeys":["ChipsBalanceImpl","constructor(startingAmount: Int, owner: Player?)","ch.ascendise.pokertracker.chips.ChipsBalanceImpl.ChipsBalanceImpl"]},{"name":"constructor(startingChips: Int, name: String = \"Player #\")","description":"ch.ascendise.pokertracker.Player.Player","location":"shared/pokertracker/ch.ascendise.pokertracker/-player/-player.html","searchKeys":["Player","constructor(startingChips: Int, name: String = \"Player #\")","ch.ascendise.pokertracker.Player.Player"]},{"name":"data class Blinds(val small: Int, val big: Int)","description":"ch.ascendise.pokertracker.Blinds","location":"shared/pokertracker/ch.ascendise.pokertracker/-blinds/index.html","searchKeys":["Blinds","data class Blinds(val small: Int, val big: Int)","ch.ascendise.pokertracker.Blinds"]},{"name":"data class GameInfo(val activePlayer: Player, val dealer: Player, val smallBlind: Player, val bigBlind: Player, val round: BettingRounds, val blinds: Blinds, val pot: Int)","description":"ch.ascendise.pokertracker.GameInfo","location":"shared/pokertracker/ch.ascendise.pokertracker/-game-info/index.html","searchKeys":["GameInfo","data class GameInfo(val activePlayer: Player, val dealer: Player, val smallBlind: Player, val bigBlind: Player, val round: BettingRounds, val blinds: Blinds, val pot: Int)","ch.ascendise.pokertracker.GameInfo"]},{"name":"enum BettingRounds : Enum<BettingRounds> ","description":"ch.ascendise.pokertracker.BettingRounds","location":"shared/pokertracker/ch.ascendise.pokertracker/-betting-rounds/index.html","searchKeys":["BettingRounds","enum BettingRounds : Enum<BettingRounds> ","ch.ascendise.pokertracker.BettingRounds"]},{"name":"expect fun getPlatform(): Platform","description":"ch.ascendise.pokertracker.getPlatform","location":"shared/pokertracker/ch.ascendise.pokertracker/get-platform.html","searchKeys":["getPlatform","expect fun getPlatform(): Platform","ch.ascendise.pokertracker.getPlatform"]},{"name":"fun bet(amount: Int): ChipsBalance.Chips","description":"ch.ascendise.pokertracker.Player.bet","location":"shared/pokertracker/ch.ascendise.pokertracker/-player/bet.html","searchKeys":["bet","fun bet(amount: Int): ChipsBalance.Chips","ch.ascendise.pokertracker.Player.bet"]},{"name":"fun call()","description":"ch.ascendise.pokertracker.Table.call","location":"shared/pokertracker/ch.ascendise.pokertracker/-table/call.html","searchKeys":["call","fun call()","ch.ascendise.pokertracker.Table.call"]},{"name":"fun check()","description":"ch.ascendise.pokertracker.Table.check","location":"shared/pokertracker/ch.ascendise.pokertracker/-table/check.html","searchKeys":["check","fun check()","ch.ascendise.pokertracker.Table.check"]},{"name":"fun depositTo(targetBalance: ChipsBalance)","description":"ch.ascendise.pokertracker.chips.ChipsBalance.Chips.depositTo","location":"shared/pokertracker/ch.ascendise.pokertracker.chips/-chips-balance/-chips/deposit-to.html","searchKeys":["depositTo","fun depositTo(targetBalance: ChipsBalance)","ch.ascendise.pokertracker.chips.ChipsBalance.Chips.depositTo"]},{"name":"fun fold()","description":"ch.ascendise.pokertracker.Table.fold","location":"shared/pokertracker/ch.ascendise.pokertracker/-table/fold.html","searchKeys":["fold","fun fold()","ch.ascendise.pokertracker.Table.fold"]},{"name":"fun raise(chips: ChipsBalance.Chips)","description":"ch.ascendise.pokertracker.Table.raise","location":"shared/pokertracker/ch.ascendise.pokertracker/-table/raise.html","searchKeys":["raise","fun raise(chips: ChipsBalance.Chips)","ch.ascendise.pokertracker.Table.raise"]},{"name":"fun selectWinner(player: Player)","description":"ch.ascendise.pokertracker.Table.selectWinner","location":"shared/pokertracker/ch.ascendise.pokertracker/-table/select-winner.html","searchKeys":["selectWinner","fun selectWinner(player: Player)","ch.ascendise.pokertracker.Table.selectWinner"]},{"name":"fun valueOf(value: String): BettingRounds","description":"ch.ascendise.pokertracker.BettingRounds.valueOf","location":"shared/pokertracker/ch.ascendise.pokertracker/-betting-rounds/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): BettingRounds","ch.ascendise.pokertracker.BettingRounds.valueOf"]},{"name":"fun values(): Array<BettingRounds>","description":"ch.ascendise.pokertracker.BettingRounds.values","location":"shared/pokertracker/ch.ascendise.pokertracker/-betting-rounds/values.html","searchKeys":["values","fun values(): Array<BettingRounds>","ch.ascendise.pokertracker.BettingRounds.values"]},{"name":"interface Platform","description":"ch.ascendise.pokertracker.Platform","location":"shared/pokertracker/ch.ascendise.pokertracker/-platform/index.html","searchKeys":["Platform","interface Platform","ch.ascendise.pokertracker.Platform"]},{"name":"open override fun close()","description":"ch.ascendise.pokertracker.chips.ChipsBalance.Chips.close","location":"shared/pokertracker/ch.ascendise.pokertracker.chips/-chips-balance/-chips/close.html","searchKeys":["close","open override fun close()","ch.ascendise.pokertracker.chips.ChipsBalance.Chips.close"]},{"name":"open override fun deposit(amount: ChipsBalance.Chips)","description":"ch.ascendise.pokertracker.chips.ChipsBalanceImpl.deposit","location":"shared/pokertracker/ch.ascendise.pokertracker.chips/-chips-balance-impl/deposit.html","searchKeys":["deposit","open override fun deposit(amount: ChipsBalance.Chips)","ch.ascendise.pokertracker.chips.ChipsBalanceImpl.deposit"]},{"name":"open override fun withdraw(amount: Int): ChipsBalance.Chips","description":"ch.ascendise.pokertracker.chips.ChipsBalanceImpl.withdraw","location":"shared/pokertracker/ch.ascendise.pokertracker.chips/-chips-balance-impl/withdraw.html","searchKeys":["withdraw","open override fun withdraw(amount: Int): ChipsBalance.Chips","ch.ascendise.pokertracker.chips.ChipsBalanceImpl.withdraw"]},{"name":"open val name: String","description":"ch.ascendise.pokertracker.IOSPlatform.name","location":"shared/pokertracker/ch.ascendise.pokertracker/-i-o-s-platform/name.html","searchKeys":["name","open val name: String","ch.ascendise.pokertracker.IOSPlatform.name"]},{"name":"val activePlayer: Player","description":"ch.ascendise.pokertracker.GameInfo.activePlayer","location":"shared/pokertracker/ch.ascendise.pokertracker/-game-info/active-player.html","searchKeys":["activePlayer","val activePlayer: Player","ch.ascendise.pokertracker.GameInfo.activePlayer"]},{"name":"val attemptedBet: Int","description":"ch.ascendise.pokertracker.chips.BalanceOverdrawnException.attemptedBet","location":"shared/pokertracker/ch.ascendise.pokertracker.chips/-balance-overdrawn-exception/attempted-bet.html","searchKeys":["attemptedBet","val attemptedBet: Int","ch.ascendise.pokertracker.chips.BalanceOverdrawnException.attemptedBet"]},{"name":"val big: Int","description":"ch.ascendise.pokertracker.Blinds.big","location":"shared/pokertracker/ch.ascendise.pokertracker/-blinds/big.html","searchKeys":["big","val big: Int","ch.ascendise.pokertracker.Blinds.big"]},{"name":"val bigBlind: Player","description":"ch.ascendise.pokertracker.GameInfo.bigBlind","location":"shared/pokertracker/ch.ascendise.pokertracker/-game-info/big-blind.html","searchKeys":["bigBlind","val bigBlind: Player","ch.ascendise.pokertracker.GameInfo.bigBlind"]},{"name":"val blinds: Blinds","description":"ch.ascendise.pokertracker.GameInfo.blinds","location":"shared/pokertracker/ch.ascendise.pokertracker/-game-info/blinds.html","searchKeys":["blinds","val blinds: Blinds","ch.ascendise.pokertracker.GameInfo.blinds"]},{"name":"val currentAmount: Int","description":"ch.ascendise.pokertracker.chips.BalanceOverdrawnException.currentAmount","location":"shared/pokertracker/ch.ascendise.pokertracker.chips/-balance-overdrawn-exception/current-amount.html","searchKeys":["currentAmount","val currentAmount: Int","ch.ascendise.pokertracker.chips.BalanceOverdrawnException.currentAmount"]},{"name":"val dealer: Player","description":"ch.ascendise.pokertracker.GameInfo.dealer","location":"shared/pokertracker/ch.ascendise.pokertracker/-game-info/dealer.html","searchKeys":["dealer","val dealer: Player","ch.ascendise.pokertracker.GameInfo.dealer"]},{"name":"val entries: EnumEntries<BettingRounds>","description":"ch.ascendise.pokertracker.BettingRounds.entries","location":"shared/pokertracker/ch.ascendise.pokertracker/-betting-rounds/entries.html","searchKeys":["entries","val entries: EnumEntries<BettingRounds>","ch.ascendise.pokertracker.BettingRounds.entries"]},{"name":"val gameInfo: GameInfo?","description":"ch.ascendise.pokertracker.Table.gameInfo","location":"shared/pokertracker/ch.ascendise.pokertracker/-table/game-info.html","searchKeys":["gameInfo","val gameInfo: GameInfo?","ch.ascendise.pokertracker.Table.gameInfo"]},{"name":"val name: String","description":"ch.ascendise.pokertracker.Player.name","location":"shared/pokertracker/ch.ascendise.pokertracker/-player/name.html","searchKeys":["name","val name: String","ch.ascendise.pokertracker.Player.name"]},{"name":"val owner: Player?","description":"ch.ascendise.pokertracker.chips.ChipsBalance.Chips.owner","location":"shared/pokertracker/ch.ascendise.pokertracker.chips/-chips-balance/-chips/owner.html","searchKeys":["owner","val owner: Player?","ch.ascendise.pokertracker.chips.ChipsBalance.Chips.owner"]},{"name":"val pot: Int","description":"ch.ascendise.pokertracker.GameInfo.pot","location":"shared/pokertracker/ch.ascendise.pokertracker/-game-info/pot.html","searchKeys":["pot","val pot: Int","ch.ascendise.pokertracker.GameInfo.pot"]},{"name":"val round: BettingRounds","description":"ch.ascendise.pokertracker.GameInfo.round","location":"shared/pokertracker/ch.ascendise.pokertracker/-game-info/round.html","searchKeys":["round","val round: BettingRounds","ch.ascendise.pokertracker.GameInfo.round"]},{"name":"val small: Int","description":"ch.ascendise.pokertracker.Blinds.small","location":"shared/pokertracker/ch.ascendise.pokertracker/-blinds/small.html","searchKeys":["small","val small: Int","ch.ascendise.pokertracker.Blinds.small"]},{"name":"val smallBlind: Player","description":"ch.ascendise.pokertracker.GameInfo.smallBlind","location":"shared/pokertracker/ch.ascendise.pokertracker/-game-info/small-blind.html","searchKeys":["smallBlind","val smallBlind: Player","ch.ascendise.pokertracker.GameInfo.smallBlind"]},{"name":"var amount: Int","description":"ch.ascendise.pokertracker.chips.ChipsBalance.Chips.amount","location":"shared/pokertracker/ch.ascendise.pokertracker.chips/-chips-balance/-chips/amount.html","searchKeys":["amount","var amount: Int","ch.ascendise.pokertracker.chips.ChipsBalance.Chips.amount"]},{"name":"var amount: Int","description":"ch.ascendise.pokertracker.chips.ChipsBalance.amount","location":"shared/pokertracker/ch.ascendise.pokertracker.chips/-chips-balance/amount.html","searchKeys":["amount","var amount: Int","ch.ascendise.pokertracker.chips.ChipsBalance.amount"]},{"name":"var balance: ChipsBalanceImpl","description":"ch.ascendise.pokertracker.Player.balance","location":"shared/pokertracker/ch.ascendise.pokertracker/-player/balance.html","searchKeys":["balance","var balance: ChipsBalanceImpl","ch.ascendise.pokertracker.Player.balance"]},{"name":"LoadGames","description":"ch.ascendise.chipless.Routes.LoadGames","location":"shared/composeApp/ch.ascendise.chipless/-routes/-load-games/index.html","searchKeys":["LoadGames","LoadGames","ch.ascendise.chipless.Routes.LoadGames"]},{"name":"NewGame","description":"ch.ascendise.chipless.Routes.NewGame","location":"shared/composeApp/ch.ascendise.chipless/-routes/-new-game/index.html","searchKeys":["NewGame","NewGame","ch.ascendise.chipless.Routes.NewGame"]},{"name":"Settings","description":"ch.ascendise.chipless.Routes.Settings","location":"shared/composeApp/ch.ascendise.chipless/-routes/-settings/index.html","searchKeys":["Settings","Settings","ch.ascendise.chipless.Routes.Settings"]},{"name":"Start","description":"ch.ascendise.chipless.Routes.Start","location":"shared/composeApp/ch.ascendise.chipless/-routes/-start/index.html","searchKeys":["Start","Start","ch.ascendise.chipless.Routes.Start"]},{"name":"abstract val name: String","description":"ch.ascendise.chipless.Platform.name","location":"shared/composeApp/ch.ascendise.chipless/-platform/name.html","searchKeys":["name","abstract val name: String","ch.ascendise.chipless.Platform.name"]},{"name":"class CreateGameViewModel : ViewModel","description":"ch.ascendise.chipless.views.gamemanagement.CreateGameViewModel","location":"shared/composeApp/ch.ascendise.chipless.views.gamemanagement/-create-game-view-model/index.html","searchKeys":["CreateGameViewModel","class CreateGameViewModel : ViewModel","ch.ascendise.chipless.views.gamemanagement.CreateGameViewModel"]},{"name":"class MainActivity : ComponentActivity","description":"ch.ascendise.chipless.MainActivity","location":"shared/composeApp/ch.ascendise.chipless/-main-activity/index.html","searchKeys":["MainActivity","class MainActivity : ComponentActivity","ch.ascendise.chipless.MainActivity"]},{"name":"constructor()","description":"ch.ascendise.chipless.MainActivity.MainActivity","location":"shared/composeApp/ch.ascendise.chipless/-main-activity/-main-activity.html","searchKeys":["MainActivity","constructor()","ch.ascendise.chipless.MainActivity.MainActivity"]},{"name":"constructor()","description":"ch.ascendise.chipless.views.gamemanagement.CreateGameViewModel.CreateGameViewModel","location":"shared/composeApp/ch.ascendise.chipless.views.gamemanagement/-create-game-view-model/-create-game-view-model.html","searchKeys":["CreateGameViewModel","constructor()","ch.ascendise.chipless.views.gamemanagement.CreateGameViewModel.CreateGameViewModel"]},{"name":"constructor(name: String)","description":"ch.ascendise.chipless.views.gamemanagement.CreatePlayerModel.CreatePlayerModel","location":"shared/composeApp/ch.ascendise.chipless.views.gamemanagement/-create-player-model/-create-player-model.html","searchKeys":["CreatePlayerModel","constructor(name: String)","ch.ascendise.chipless.views.gamemanagement.CreatePlayerModel.CreatePlayerModel"]},{"name":"constructor(players: SnapshotStateList<CreatePlayerModel> = mutableStateListOf(), playersLeft: MutableState<Int> = mutableStateOf(2), dealer: MutableState<CreatePlayerModel?> = mutableStateOf(null), balancePerPlayer: MutableState<Int> = mutableStateOf(100))","description":"ch.ascendise.chipless.views.gamemanagement.CreateGameViewModel.State.State","location":"shared/composeApp/ch.ascendise.chipless.views.gamemanagement/-create-game-view-model/-state/-state.html","searchKeys":["State","constructor(players: SnapshotStateList<CreatePlayerModel> = mutableStateListOf(), playersLeft: MutableState<Int> = mutableStateOf(2), dealer: MutableState<CreatePlayerModel?> = mutableStateOf(null), balancePerPlayer: MutableState<Int> = mutableStateOf(100))","ch.ascendise.chipless.views.gamemanagement.CreateGameViewModel.State.State"]},{"name":"data class CreatePlayerModel(var name: String)","description":"ch.ascendise.chipless.views.gamemanagement.CreatePlayerModel","location":"shared/composeApp/ch.ascendise.chipless.views.gamemanagement/-create-player-model/index.html","searchKeys":["CreatePlayerModel","data class CreatePlayerModel(var name: String)","ch.ascendise.chipless.views.gamemanagement.CreatePlayerModel"]},{"name":"data class State(val players: SnapshotStateList<CreatePlayerModel> = mutableStateListOf(), val playersLeft: MutableState<Int> = mutableStateOf(2), val dealer: MutableState<CreatePlayerModel?> = mutableStateOf(null), val balancePerPlayer: MutableState<Int> = mutableStateOf(100))","description":"ch.ascendise.chipless.views.gamemanagement.CreateGameViewModel.State","location":"shared/composeApp/ch.ascendise.chipless.views.gamemanagement/-create-game-view-model/-state/index.html","searchKeys":["State","data class State(val players: SnapshotStateList<CreatePlayerModel> = mutableStateListOf(), val playersLeft: MutableState<Int> = mutableStateOf(2), val dealer: MutableState<CreatePlayerModel?> = mutableStateOf(null), val balancePerPlayer: MutableState<Int> = mutableStateOf(100))","ch.ascendise.chipless.views.gamemanagement.CreateGameViewModel.State"]},{"name":"enum Routes : Enum<Routes> ","description":"ch.ascendise.chipless.Routes","location":"shared/composeApp/ch.ascendise.chipless/-routes/index.html","searchKeys":["Routes","enum Routes : Enum<Routes> ","ch.ascendise.chipless.Routes"]},{"name":"expect fun getPlatform(): Platform","description":"ch.ascendise.chipless.getPlatform","location":"shared/composeApp/ch.ascendise.chipless/get-platform.html","searchKeys":["getPlatform","expect fun getPlatform(): Platform","ch.ascendise.chipless.getPlatform"]},{"name":"fun App()","description":"ch.ascendise.chipless.App","location":"shared/composeApp/ch.ascendise.chipless/-app.html","searchKeys":["App","fun App()","ch.ascendise.chipless.App"]},{"name":"fun AppAndroidPreview()","description":"ch.ascendise.chipless.AppAndroidPreview","location":"shared/composeApp/ch.ascendise.chipless/-app-android-preview.html","searchKeys":["AppAndroidPreview","fun AppAndroidPreview()","ch.ascendise.chipless.AppAndroidPreview"]},{"name":"fun BalanceTopBar(balance: Int = 100, onBalanceChange: (Int) -> Unit = {})","description":"ch.ascendise.chipless.widgets.BalanceTopBar","location":"shared/composeApp/ch.ascendise.chipless.widgets/-balance-top-bar.html","searchKeys":["BalanceTopBar","fun BalanceTopBar(balance: Int = 100, onBalanceChange: (Int) -> Unit = {})","ch.ascendise.chipless.widgets.BalanceTopBar"]},{"name":"fun FormTextField(value: String = \"\", onValueChange: (String) -> Unit = {}, caption: String = \"\", modifier: Modifier = Modifier)","description":"ch.ascendise.chipless.components.FormTextField","location":"shared/composeApp/ch.ascendise.chipless.components/-form-text-field.html","searchKeys":["FormTextField","fun FormTextField(value: String = \"\", onValueChange: (String) -> Unit = {}, caption: String = \"\", modifier: Modifier = Modifier)","ch.ascendise.chipless.components.FormTextField"]},{"name":"fun MainViewController(): <Error class: unknown class>","description":"MainViewController","location":"shared/composeApp/[root]/-main-view-controller.html","searchKeys":["MainViewController","fun MainViewController(): <Error class: unknown class>","MainViewController"]},{"name":"fun MenuButton(onClick: () -> Unit, modifier: Modifier = Modifier, enabled: Boolean = true, content: () -> Unit)","description":"ch.ascendise.chipless.components.MenuButton","location":"shared/composeApp/ch.ascendise.chipless.components/-menu-button.html","searchKeys":["MenuButton","fun MenuButton(onClick: () -> Unit, modifier: Modifier = Modifier, enabled: Boolean = true, content: () -> Unit)","ch.ascendise.chipless.components.MenuButton"]},{"name":"fun PlayerInfoWidget(player: CreatePlayerModel, modifier: Modifier = Modifier, onPlayerEdit: (CreatePlayerModel) -> Unit = {}, isDealer: Boolean = false, setAsDealer: () -> Unit = {})","description":"ch.ascendise.chipless.widgets.PlayerInfoWidget","location":"shared/composeApp/ch.ascendise.chipless.widgets/-player-info-widget.html","searchKeys":["PlayerInfoWidget","fun PlayerInfoWidget(player: CreatePlayerModel, modifier: Modifier = Modifier, onPlayerEdit: (CreatePlayerModel) -> Unit = {}, isDealer: Boolean = false, setAsDealer: () -> Unit = {})","ch.ascendise.chipless.widgets.PlayerInfoWidget"]},{"name":"fun PlayerList(players: MutableList<CreatePlayerModel>, dealer: CreatePlayerModel?, onDeletePlayer: (CreatePlayerModel) -> Unit = {}, onChangeDealer: (Int) -> Unit = {})","description":"ch.ascendise.chipless.widgets.PlayerList","location":"shared/composeApp/ch.ascendise.chipless.widgets/-player-list.html","searchKeys":["PlayerList","fun PlayerList(players: MutableList<CreatePlayerModel>, dealer: CreatePlayerModel?, onDeletePlayer: (CreatePlayerModel) -> Unit = {}, onChangeDealer: (Int) -> Unit = {})","ch.ascendise.chipless.widgets.PlayerList"]},{"name":"fun SlideRemovable(modifier: Modifier = Modifier, orientation: Orientation, toDeleteOffset: Float = 512.0f, onDelete: () -> Unit = {}, content: () -> Unit)","description":"ch.ascendise.chipless.components.SlideRemovable","location":"shared/composeApp/ch.ascendise.chipless.components/-slide-removable.html","searchKeys":["SlideRemovable","fun SlideRemovable(modifier: Modifier = Modifier, orientation: Orientation, toDeleteOffset: Float = 512.0f, onDelete: () -> Unit = {}, content: () -> Unit)","ch.ascendise.chipless.components.SlideRemovable"]},{"name":"fun changeDealer(playerIndex: Int)","description":"ch.ascendise.chipless.views.gamemanagement.CreateGameViewModel.changeDealer","location":"shared/composeApp/ch.ascendise.chipless.views.gamemanagement/-create-game-view-model/change-dealer.html","searchKeys":["changeDealer","fun changeDealer(playerIndex: Int)","ch.ascendise.chipless.views.gamemanagement.CreateGameViewModel.changeDealer"]},{"name":"fun createNewPlayer()","description":"ch.ascendise.chipless.views.gamemanagement.CreateGameViewModel.createNewPlayer","location":"shared/composeApp/ch.ascendise.chipless.views.gamemanagement/-create-game-view-model/create-new-player.html","searchKeys":["createNewPlayer","fun createNewPlayer()","ch.ascendise.chipless.views.gamemanagement.CreateGameViewModel.createNewPlayer"]},{"name":"fun deletePlayer(createPlayerModel: CreatePlayerModel)","description":"ch.ascendise.chipless.views.gamemanagement.CreateGameViewModel.deletePlayer","location":"shared/composeApp/ch.ascendise.chipless.views.gamemanagement/-create-game-view-model/delete-player.html","searchKeys":["deletePlayer","fun deletePlayer(createPlayerModel: CreatePlayerModel)","ch.ascendise.chipless.views.gamemanagement.CreateGameViewModel.deletePlayer"]},{"name":"fun valueOf(value: String): Routes","description":"ch.ascendise.chipless.Routes.valueOf","location":"shared/composeApp/ch.ascendise.chipless/-routes/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): Routes","ch.ascendise.chipless.Routes.valueOf"]},{"name":"fun values(): Array<Routes>","description":"ch.ascendise.chipless.Routes.values","location":"shared/composeApp/ch.ascendise.chipless/-routes/values.html","searchKeys":["values","fun values(): Array<Routes>","ch.ascendise.chipless.Routes.values"]},{"name":"interface Platform","description":"ch.ascendise.chipless.Platform","location":"shared/composeApp/ch.ascendise.chipless/-platform/index.html","searchKeys":["Platform","interface Platform","ch.ascendise.chipless.Platform"]},{"name":"val balancePerPlayer: MutableState<Int>","description":"ch.ascendise.chipless.views.gamemanagement.CreateGameViewModel.State.balancePerPlayer","location":"shared/composeApp/ch.ascendise.chipless.views.gamemanagement/-create-game-view-model/-state/balance-per-player.html","searchKeys":["balancePerPlayer","val balancePerPlayer: MutableState<Int>","ch.ascendise.chipless.views.gamemanagement.CreateGameViewModel.State.balancePerPlayer"]},{"name":"val dealer: MutableState<CreatePlayerModel?>","description":"ch.ascendise.chipless.views.gamemanagement.CreateGameViewModel.State.dealer","location":"shared/composeApp/ch.ascendise.chipless.views.gamemanagement/-create-game-view-model/-state/dealer.html","searchKeys":["dealer","val dealer: MutableState<CreatePlayerModel?>","ch.ascendise.chipless.views.gamemanagement.CreateGameViewModel.State.dealer"]},{"name":"val entries: EnumEntries<Routes>","description":"ch.ascendise.chipless.Routes.entries","location":"shared/composeApp/ch.ascendise.chipless/-routes/entries.html","searchKeys":["entries","val entries: EnumEntries<Routes>","ch.ascendise.chipless.Routes.entries"]},{"name":"val players: SnapshotStateList<CreatePlayerModel>","description":"ch.ascendise.chipless.views.gamemanagement.CreateGameViewModel.State.players","location":"shared/composeApp/ch.ascendise.chipless.views.gamemanagement/-create-game-view-model/-state/players.html","searchKeys":["players","val players: SnapshotStateList<CreatePlayerModel>","ch.ascendise.chipless.views.gamemanagement.CreateGameViewModel.State.players"]},{"name":"val playersLeft: MutableState<Int>","description":"ch.ascendise.chipless.views.gamemanagement.CreateGameViewModel.State.playersLeft","location":"shared/composeApp/ch.ascendise.chipless.views.gamemanagement/-create-game-view-model/-state/players-left.html","searchKeys":["playersLeft","val playersLeft: MutableState<Int>","ch.ascendise.chipless.views.gamemanagement.CreateGameViewModel.State.playersLeft"]},{"name":"val state: CreateGameViewModel.State","description":"ch.ascendise.chipless.views.gamemanagement.CreateGameViewModel.state","location":"shared/composeApp/ch.ascendise.chipless.views.gamemanagement/-create-game-view-model/state.html","searchKeys":["state","val state: CreateGameViewModel.State","ch.ascendise.chipless.views.gamemanagement.CreateGameViewModel.state"]},{"name":"var name: String","description":"ch.ascendise.chipless.views.gamemanagement.CreatePlayerModel.name","location":"shared/composeApp/ch.ascendise.chipless.views.gamemanagement/-create-player-model/name.html","searchKeys":["name","var name: String","ch.ascendise.chipless.views.gamemanagement.CreatePlayerModel.name"]}]